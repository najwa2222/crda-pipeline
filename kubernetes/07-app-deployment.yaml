apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: crda-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: crda-app      # These labels must match
      tier: backend      # the ones in template.metadata.labels
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:  # Added metadata section with labels
      labels:
        app: crda-app    # Must match the selector's matchLabels
        tier: backend
    spec:
      initContainers:
      - name: db-check
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -zw 2 mysql-service 3306; do echo "Waiting for DB"; sleep 2; done']
      containers:
      - name: app
        image: najwa22/crda-app:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: MYSQL_HOST
          value: "mysql-service"       # Service name for MySQL
        - name: MYSQL_USER
          value: "app_user"            # From MySQL deployment
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret       # Must match the secret name
              key: app-password        # Key holding app_user's password
        - name: MYSQL_DATABASE
          value: "base_crda"           # Database name from MySQL deployment
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60  # Give the app more time to start
          periodSeconds: 10
          failureThreshold: 5      # Reduce failure threshold
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30  # Delay longer before checking
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 90  # Allow even more time for startup
          periodSeconds: 15