pipeline {
    agent any

    environment {
        KUBECONFIG = 'C:\\Users\\acer\\.kube\\config'
        DOCKERFILE_PATH = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\app\\backend\\GestionDocuments\\Dockerfile'
        DOCKER_IMAGE = 'najwakarrouchi/gestiondocuments'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Set Up Environment') {
            steps {
                echo 'Setting up environment...'
                script {
                    bat "echo KUBECONFIG Path: ${KUBECONFIG}"
                    bat "echo Configuration du chemin Docker : ${DOCKERFILE_PATH}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    bat "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f ${DOCKERFILE_PATH.replace('\\', '/')} ."
                }
            }
        }

        stage('Verify Docker Image') {
            steps {
                echo "Pushing Docker image..."
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    bat """
                    docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%
                    docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    def kubeconfig = env.KUBECONFIG
                    def yamlFile = "C:/ProgramData/Jenkins/.jenkins/workspace/app/backend/GestionDocuments/deployment-gestiondocument.yaml"
                    
                    bat "kubectl apply -f ${yamlFile} -n gestiondocuments --kubeconfig ${kubeconfig}"
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment succeeded!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}